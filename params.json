{"name":"Redwood","tagline":"A project that implements statistical methods for identifying anomalous files","body":"#Association-Based Data Reduction (REDWOOD)\r\n\r\nThis project implements statistical methods to assist in identifying anomalous files from a larger data set.  \r\n\r\n\r\n##Python Package Requirements\r\n\r\n- MySQLdb - MySQL-Python Project provides MySQL Connector (http://mysql-python.sourceforge.net/)\r\n- python 2.7\r\n- SciPy - http://www.scipy.org/\r\n\r\n\r\n##Setup\r\n\r\n###Databases\r\nFirst create the database\r\n\r\nFrom the Redwood directory, run\r\n```\r\nmysql -uyour_db_user -pyour_password -hyour_host < sql/create_redwood_db.sql\r\nmysql -uyour_db_user -pyour_password -hyour_host < sql/create_redwood_sp.sql\r\n```\r\n\r\n###Run Redwood\r\nwrite a connection config\r\n```\r\n[mysqld]\r\ndatabase:your_db_name\r\nhost:your_host\r\nusername:your_username\r\npassword:your_password\r\n```\r\n\r\nThen, start the application, specifying the config you just created\r\n\r\n```\r\npython redwood.py /path/to/connection/config\r\n```\r\n\r\n###Obtain Data\r\n\r\nThe load_csv command expects that the fields be in the following order\r\n```\r\nsha1,dirname,basename,inode,device,permissions,user_owner,group_owner,last_accessed,last_modified,last_changed,inode_birth,user_flags,links_to_file,size\r\n```\r\n\r\nThe script below will walk a hfs+ file system and (perhaps) other Unix/Linux file systems, collecting the relevant metadata using the stat command.  The output will be in the appropriate format for the load_csv command\r\n\r\n```\r\necho \"sha1,dirname,basename,inode,device,permissions,user_owner,group_owner,last_accessed,last_modified,last_changed,inode_birth,user_flags,links_to_file,size\" > filewalk; sudo find / -type f -exec  sh -c 'A=$(shasum \"$0\" | cut -d\" \"  -f1-2 | tr -d \" \") ; DIR=\"$(dirname \"$0\")/\"; BASE=$(basename \"$0\"); B=$(stat -f  \"%i,%d,%p,%Su,%Sg,%a,%m,%c,%B,%f,%l,%z\" \"$0\") ;  echo $A,$DIR,$BASE,$B >> filewalk ; ' {} \\;\r\n```\r\n\r\n##Plugin Architecture\r\n\r\nRedwood uses a series of filters that run statistical methods on the data. These filters are the core of how Redwood assigns scores to individual files. To add a filter to Redwood, extend the RedwoodFilter class as shown below: \r\n\r\n```\r\nclass YourFilterName(RedwoodFilter)\r\n\r\n    def __init__(self):\r\n        self.name = \"YourFilterName\"\r\n    def usage(self):\r\n        print \"Your usage statement\"\r\n\r\n    #discovery functions\r\n    def discover_your_discover_func0(self, arg0, ..., argN):\r\n        your code\r\n    ...\r\n    def discover_your discover_funcM(self, arg0, ..., argN):\r\n        your code\r\n\r\n    #run function\r\n    def run(self, cnx):\r\n        your code\r\n\r\n```\r\n","google":"UA-40464073-1","note":"Don't delete this file! It's used internally to help with page regeneration."}